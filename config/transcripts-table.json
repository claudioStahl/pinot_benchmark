{
  "tableName": "transcript",
  "tableType": "REALTIME",
  "routing": {
    "segmentPrunerTypes": [
      "partition"
    ]
  },
  "segmentsConfig": {
    "timeColumnName": "tsHour",
    "timeType": "HOURS",
    "segmentPushType": "APPEND",
    "segmentAssignmentStrategy": "BalanceNumSegmentAssignmentStrategy",
    "schemaName": "transcript",
    "replicasPerPartition": "1",
    "retentionTimeUnit": "HOURS",
    "retentionTimeValue": 2
  },
  "tenants": {},
  "ingestionConfig": {
    "transformConfigs": [
      {
        "columnName": "ts",
        "transformFunction": "\"timestamp\""
      },
      {
        "columnName": "tsDay",
        "transformFunction": "toEpochDays(\"timestamp\")"
      },
      {
        "columnName": "tsHour",
        "transformFunction": "toEpochHours(\"timestamp\")"
      },
      {
        "columnName": "tsMinute",
        "transformFunction": "toEpochMinutes(\"timestamp\")"
      },
      {
        "columnName": "tsSecond",
        "transformFunction": "toEpochSeconds(\"timestamp\")"
      }
    ]
  },
  "tableIndexConfig": {
    "loadMode": "MMAP",
    "segmentPartitionConfig": {
      "columnPartitionMap": {
        "studentID": {
          "functionName": "Modulo",
          "numPartitions": 10
        }
      }
    },
    "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.consumer.type": "lowLevel",
      "stream.kafka.topic.name": "transcripts",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
      "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
      "stream.kafka.hlc.zk.connect.string": "zookeeper:2181/kafka",
      "stream.kafka.zk.broker.url": "zookeeper:2181/kafka",
      "stream.kafka.hlc.bootstrap.server": "kafka:29092",
      "stream.kafka.broker.list": "kafka:29092",
      "realtime.segment.flush.threshold.time": "10m",
      "realtime.segment.flush.threshold.rows": "1000000",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
    },
    "starTreeIndexConfigs": [
      {
        "dimensionsSplitOrder": [
          "studentID",
          "tsMinute"
        ],
        "skipStarNodeCreationForDimensions": [],
        "functionColumnPairs": [
          "COUNT__*",
          "SUM__score"
        ],
        "maxLeafRecords": 10000
      }
    ]
  },
  "metadata": {
    "customConfigs": {}
  },
  "task": {
    "taskTypeConfigsMap": {
      "RealtimeToOfflineSegmentsTask": {
        "bucketTimePeriod": "10m",
        "bufferTimePeriod": "1h",
        "mergeType": "concat",
        "maxNumRecordsPerSegment": "100000"
      }
    }
  }
}
